#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define FUN 1
#define LOC 2
#define NAV 3
#define MOU 4
#define NUM 5

&lt {
  tapping-term-ms = <150>;
  quick_tap_ms = <150>;
};

/ {

  behaviors {
//    td0: tap_dance_0 {
//      compatible = "zmk,behavior-tap-dance";
//      label = "TAP_DANCE_0";
//      #binding-cells = <0>;
//      tapping-term-ms = <200>;
//      bindings = <&kp LSHIFT>, <&kp LCTRL>;
//    };
    hn: hold_none{
      compatible = "zmk,behavior-hold-tap";
      label = "HOLD_NONE";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick_tap_ms = <150>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&none>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
//done
    default_layer { 
      bindings = <
 &mt LCTRL Q &kp W      &kp F       &kp P        &kp G          &kp J       &kp L         &kp U       &kp Y      &mt RCTRL SEMI
 &kp A       &kp R      &kp S       &kp T        &kp D          &kp H       &kp N         &kp E       &kp I      &kp O
 &kp Z       &kp X      &kp C       &kp V        &kp B          &kp K       &kp M         &kp COMMA   &kp DOT    &mt RALT FSLH
                       &hn 5 0     &kp LSHIFT   &lt MOU SPACE  &lt NAV RET &kp BSPC      &to 1
      >;
    };
//done
    function {
      bindings = <
 &kp Q      &kp W      &kp E       &kp R        &kp T      &kp Y       &kp U         &kp I       &kp O      &kp P
 &kp A      &kp S      &kp D       &kp F        &kp G      &kp H       &kp J         &kp K       &kp L      &kp RGUI
 &kp Z      &kp X      &kp C       &kp V        &kp B      &kp N       &kp M         &kp TAB     &kp DOT    &kp LALT
                       &to 0       &kp LCTRL    &kp SPACE  &kp RSHIFT  &kp DEL       &to 5
      >;
    };
//done
    lock {
      bindings = <
 &none  &none &none     &none  &none        &none  &none  &none &none &ext_power EP_TOG
 &none  &none &none     &none  &none        &none  &none  &none &none &none
 &none  &none &none     &none  &none        &none  &none  &none &none &none
              &to 0     &none  &none        &none  &none  &none
      >;
    };
//done
    arrows {
      bindings = <
 &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4      &none      &none     &kp UP   &none     &kp GRAVE
 &kp C_VOL_DN  &kp C_VOL_UP &kp C_BRI_DN    &kp C_BRI_UP  &kp C_MUTE        &kp MINUS  &kp LEFT  &kp DOWN &kp RIGHT &kp SQT
 &bt BT_CLR    &none        &none           &none         &none             &none      &none     &none    &none     &none
                            &to 0           &kp LCTRL     &kp LSHIFT        &none      &none     &to 2
      >;
    };
//done missing mouse keys
    mouse_layer {
      bindings = <
 &none  &none &none     &none       &none          &none       &none  &none    &none &kp GRAVE
 &none  &none &none     &none       &none          &kp MINUS   &none  &none    &none &kp SQT
 &none  &none &none     &none       &none          &none       &none  &kp RGUI &none &kp EXCL
              &none     &kp LSHIFT  &none          &kp RSHIFT  &none  &none
      >;
    };
//done
    number_layer {
      bindings = <
 &kp F1   &kp F2  &kp F3     &kp F4     &kp F5        &kp F5      &kp F7     &kp F8   &kp F9   &kp F10
 &kp N1   &kp N2  &kp N3     &kp N4     &kp N5        &kp N6      &kp N7     &kp N8   &kp N9   &kp N0
 &kp F11  &kp F12 &kp ESC    &kp PSCRN  &none         &kp EQUAL   &kp MINUS  &kp BSLH &kp LBKT &kp RBKT
                  &to 0      &none      &none         &kp RSHIFT  &none      &to 3
      >;
    };

  };
};
